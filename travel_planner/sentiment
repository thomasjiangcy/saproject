"""
import os
import random
import sys

import requests

from travel_planner.db.connector import Connector
from travel_planner.crawler.utils import make_request, crawl_comments, parse_request_error

connectorChee = Connector()
conn = connectorChee.connection
# Get a list of existing venue ids from the DB first so we won't add duplicates
tips = connectorChee.fetch_tips()
existing_venue_ids = connectorChee.fetch_venue_ids()
venues=connectorChee.fetch_venues()

x=[]
for i in range(len(tips)):
    x.append(tips[i].id)
    
a=[]
for i in range(len(tips)):
    a.append(tips[i].content)

from nltk.sentiment.vader import SentimentIntensityAnalyzer
senti_score = SentimentIntensityAnalyzer()

b=[]
for i in range(len(a)):
    b.append(senti_score.polarity_scores(a[i])["compound"])
    
c=[]
for i in range(len(a)):
    c.append(senti_score.polarity_scores(a[i])["pos"])

d=[]
for i in range(len(a)):
    d.append(senti_score.polarity_scores(a[i])["neu"])

e=[]
for i in range(len(a)):
    e.append(senti_score.polarity_scores(a[i])["neg"])
y=[]
for i in range(len(a)):
    y.append(i+1)
